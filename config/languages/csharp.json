{
    "name": "C#",
    "extensions": [
        "cs"
    ],
    "indent_width": 4,
    "blocks": {
        "do_start_on_newline": true
    },
    "lsp": {
        "language_id": "csharp"
    },
    "syntax": {
        "keywords": [
            "abstract",
            "as",
            "base",
            "bool",
            "break",
            "byte",
            "case",
            "catch",
            "char",
            "checked",
            "class",
            "const",
            "continue",
            "decimal",
            "default",
            "delegate",
            "do",
            "double",
            "else",
            "enum",
            "event",
            "explicit",
            "extern",
            "false",
            "finally",
            "fixed",
            "float",
            "for",
            "foreach",
            "goto",
            "if",
            "implicit",
            "in",
            "int",
            "interface",
            "internal",
            "is",
            "lock",
            "long",
            "namespace",
            "new",
            "null",
            "object",
            "operator",
            "out",
            "override",
            "params",
            "private",
            "protected",
            "public",
            "readonly",
            "ref",
            "return",
            "sbyte",
            "sealed",
            "short",
            "sizeof",
            "stackalloc",
            "static",
            "string",
            "struct",
            "switch",
            "this",
            "throw",
            "true",
            "try",
            "typeof",
            "uint",
            "ulong",
            "unchecked",
            "unsafe",
            "ushort",
            "using",
            "virtual",
            "void",
            "volatile",
            "while",
            "async",
            "await",
            "nameof",
            "not",
            "record",
            "var",
            "yield",
            "with",
            "partial"
        ],
        "ranges": [
            {
                "kind": "String",
                "start": "$?\"",
                "end": "\"",
                "escape": "\\"
            },
            {
                "kind": "String",
                "start": "'",
                "end": "'",
                "escape": "\\"
            },
            {
                "kind": "Comment",
                "start": "/%*",
                "end": "%*/"
            }
        ],
        "tokens": [
            {
                "kind": "Comment",
                "pattern": "//%.*"
            },
            {
                "kind": "Meta",
                "pattern": "#%.*"
            },
            {
                "kind": "Function",
                "pattern": "([%a_][%w_]*)%s*%("
            },
            {
                "kind": "Function",
                "pattern": "([%a_][%w_]*)%s*<%.->%s*%("
            },
            {
                "kind": "Number",
                "pattern": "0x%x+"
            },
            {
                "kind": "Number",
                "pattern": "0b[01]+"
            },
            {
                "kind": "Number",
                "pattern": "(%d[%d_]*.?[%d_]*)[^.]"
            },
            {
                "kind": "Number",
                "pattern": "%d[%d_]*"
            },
            {
                "kind": "Symbol",
                "pattern": "[!=&,><./:@|;{}()%%%^%*%+%-%?%[%]]"
            }
        ]
    }
}